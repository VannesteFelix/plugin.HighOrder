%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: mardi 25 mars 2014 17 h 34 CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
12.0000 -1.00000 376.997 355.000 rc
0.470588 0 0.0549020 RG
newpath
13.0000 353.000 m
386.997 1.00000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
12.0000 -1.00000 376.997 355.000 rc
0 0.0549020 0.470588 RG
newpath
13.0000 38.9076 m
386.997 197.307 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
13.0000 355.000 m
386.997 355.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
192 374 14 15 rc
newpath
198.875 380.250 m
198.437 381.718 l
198.895 381.177 199.307 380.796 199.671 380.578  c
200.036 380.359 200.406 380.250 200.781 380.250  c
201.156 380.250 201.476 380.401 201.742 380.703  c
202.007 381.005 202.140 381.395 202.140 381.875  c
202.140 382.802 201.763 383.747 201.007 384.710  c
200.252 385.674 199.369 386.156 198.359 386.156  c
198.151 386.156 197.966 386.132 197.804 386.085  c
197.643 386.039 197.458 385.953 197.250 385.828  c
196.781 387.468 l
196.687 387.791 196.640 388.000 196.640 388.093  c
196.640 388.187 196.666 388.268 196.718 388.335  c
196.770 388.403 196.851 388.455 196.960 388.492  c
197.070 388.528 197.286 388.546 197.609 388.546  c
197.562 388.781 l
194.562 388.781 l
194.625 388.546 l
195.020 388.526 195.286 388.458 195.421 388.343  c
195.557 388.229 195.703 387.901 195.859 387.359  c
197.468 381.796 l
197.562 381.442 197.609 381.224 197.609 381.140  c
197.609 381.026 197.578 380.937 197.515 380.875  c
197.453 380.812 197.354 380.781 197.218 380.781  c
197.093 380.781 196.921 380.796 196.703 380.828  c
196.703 380.578 l
198.875 380.250 l
h
197.390 385.328 m
197.661 385.640 198.015 385.796 198.453 385.796  c
198.671 385.796 198.895 385.737 199.125 385.617  c
199.354 385.497 199.578 385.317 199.796 385.078  c
200.015 384.838 200.210 384.559 200.382 384.242  c
200.554 383.924 200.710 383.552 200.851 383.125  c
200.992 382.697 201.062 382.276 201.062 381.859  c
201.062 381.515 200.984 381.255 200.828 381.078  c
200.671 380.901 200.489 380.812 200.281 380.812  c
199.822 380.812 199.372 381.072 198.929 381.593  c
198.487 382.114 198.161 382.729 197.953 383.437  c
197.390 385.328 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
13.0000 355.000 m
13.0000 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 365 6 13 rc
newpath
16.7968 372.437 m
8.20312 372.437 l
8.20312 371.765 l
16.7968 371.765 l
16.7968 372.437 l
h
f
Q
newpath
14.4687 371.750 m
14.4687 370.770 14.6171 369.924 14.9140 369.210  c
15.2109 368.497 15.6041 367.968 16.0937 367.625  c
16.4791 367.354 16.8750 367.218 17.2812 367.218  c
17.9375 367.218 18.5260 367.552 19.0468 368.218  c
19.7031 369.052 20.0312 370.182 20.0312 371.609  c
20.0312 372.609 19.8880 373.458 19.6015 374.156  c
19.3151 374.854 18.9479 375.362 18.5000 375.679  c
18.0520 375.997 17.6250 376.156 17.2187 376.156  c
16.3958 376.156 15.7083 375.671 15.1562 374.703  c
14.6979 373.880 14.4687 372.895 14.4687 371.750  c
h
15.7187 371.906 m
15.7187 373.093 15.8645 374.062 16.1562 374.812  c
16.3958 375.437 16.7552 375.750 17.2343 375.750  c
17.4635 375.750 17.7005 375.648 17.9453 375.445  c
18.1901 375.242 18.3750 374.895 18.5000 374.406  c
18.6979 373.687 18.7968 372.661 18.7968 371.328  c
18.7968 370.349 18.6927 369.531 18.4843 368.875  c
18.3385 368.385 18.1406 368.041 17.8906 367.843  c
17.7239 367.708 17.5156 367.640 17.2656 367.640  c
16.9843 367.640 16.7291 367.765 16.5000 368.015  c
16.1979 368.369 15.9921 368.924 15.8828 369.679  c
15.7734 370.434 15.7187 371.177 15.7187 371.906  c
h
22.1250 374.765 m
22.3229 374.765 22.4895 374.835 22.6250 374.976  c
22.7604 375.117 22.8281 375.281 22.8281 375.468  c
22.8281 375.666 22.7604 375.833 22.6250 375.968  c
22.4895 376.104 22.3229 376.171 22.1250 376.171  c
21.9270 376.171 21.7604 376.104 21.6250 375.968  c
21.4895 375.833 21.4218 375.666 21.4218 375.468  c
21.4218 375.270 21.4895 375.104 21.6250 374.968  c
21.7604 374.833 21.9270 374.765 22.1250 374.765  c
h
26.2500 371.671 m
25.5625 371.109 25.1197 370.658 24.9218 370.320  c
24.7239 369.981 24.6250 369.630 24.6250 369.265  c
24.6250 368.703 24.8411 368.221 25.2734 367.820  c
25.7057 367.419 26.2812 367.218 27.0000 367.218  c
27.6979 367.218 28.2578 367.406 28.6796 367.781  c
29.1015 368.156 29.3125 368.583 29.3125 369.062  c
29.3125 369.385 29.1979 369.713 28.9687 370.046  c
28.7395 370.380 28.2656 370.776 27.5468 371.234  c
28.2864 371.807 28.7760 372.260 29.0156 372.593  c
29.3385 373.020 29.5000 373.474 29.5000 373.953  c
29.5000 374.557 29.2708 375.075 28.8125 375.507  c
28.3541 375.940 27.7500 376.156 27.0000 376.156  c
26.1770 376.156 25.5364 375.901 25.0781 375.390  c
24.7135 374.974 24.5312 374.520 24.5312 374.031  c
24.5312 373.656 24.6614 373.281 24.9218 372.906  c
25.1822 372.531 25.6250 372.119 26.2500 371.671  c
h
27.2343 370.984 m
27.7447 370.526 28.0677 370.164 28.2031 369.898  c
28.3385 369.632 28.4062 369.333 28.4062 369.000  c
28.4062 368.562 28.2812 368.216 28.0312 367.960  c
27.7812 367.705 27.4427 367.578 27.0156 367.578  c
26.5781 367.578 26.2239 367.703 25.9531 367.953  c
25.6822 368.203 25.5468 368.494 25.5468 368.828  c
25.5468 369.046 25.6041 369.268 25.7187 369.492  c
25.8333 369.716 25.9947 369.927 26.2031 370.125  c
27.2343 370.984 l
h
26.5468 371.906 m
26.1927 372.197 25.9322 372.518 25.7656 372.867  c
25.5989 373.216 25.5156 373.593 25.5156 374.000  c
25.5156 374.552 25.6640 374.992 25.9609 375.320  c
26.2578 375.648 26.6354 375.812 27.0937 375.812  c
27.5520 375.812 27.9192 375.682 28.1953 375.421  c
28.4713 375.161 28.6093 374.849 28.6093 374.484  c
28.6093 374.182 28.5260 373.906 28.3593 373.656  c
28.0677 373.208 27.4635 372.625 26.5468 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
70.5380 355.000 m
70.5380 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
63 365 6 13 rc
newpath
73.7968 372.437 m
65.2031 372.437 l
65.2031 371.765 l
73.7968 371.765 l
73.7968 372.437 l
h
f
Q
newpath
71.4687 371.750 m
71.4687 370.770 71.6171 369.924 71.9140 369.210  c
72.2109 368.497 72.6041 367.968 73.0937 367.625  c
73.4791 367.354 73.8750 367.218 74.2812 367.218  c
74.9375 367.218 75.5260 367.552 76.0468 368.218  c
76.7031 369.052 77.0312 370.182 77.0312 371.609  c
77.0312 372.609 76.8880 373.458 76.6015 374.156  c
76.3151 374.854 75.9479 375.362 75.5000 375.679  c
75.0520 375.997 74.6250 376.156 74.2187 376.156  c
73.3958 376.156 72.7083 375.671 72.1562 374.703  c
71.6979 373.880 71.4687 372.895 71.4687 371.750  c
h
72.7187 371.906 m
72.7187 373.093 72.8645 374.062 73.1562 374.812  c
73.3958 375.437 73.7552 375.750 74.2343 375.750  c
74.4635 375.750 74.7005 375.648 74.9453 375.445  c
75.1901 375.242 75.3750 374.895 75.5000 374.406  c
75.6979 373.687 75.7968 372.661 75.7968 371.328  c
75.7968 370.349 75.6927 369.531 75.4843 368.875  c
75.3385 368.385 75.1406 368.041 74.8906 367.843  c
74.7239 367.708 74.5156 367.640 74.2656 367.640  c
73.9843 367.640 73.7291 367.765 73.5000 368.015  c
73.1979 368.369 72.9921 368.924 72.8828 369.679  c
72.7734 370.434 72.7187 371.177 72.7187 371.906  c
h
79.1250 374.765 m
79.3229 374.765 79.4895 374.835 79.6250 374.976  c
79.7604 375.117 79.8281 375.281 79.8281 375.468  c
79.8281 375.666 79.7604 375.833 79.6250 375.968  c
79.4895 376.104 79.3229 376.171 79.1250 376.171  c
78.9270 376.171 78.7604 376.104 78.6250 375.968  c
78.4895 375.833 78.4218 375.666 78.4218 375.468  c
78.4218 375.270 78.4895 375.104 78.6250 374.968  c
78.7604 374.833 78.9270 374.765 79.1250 374.765  c
h
86.5781 367.218 m
86.5781 367.453 l
86.0156 367.505 85.5572 367.614 85.2031 367.781  c
84.8489 367.947 84.5000 368.203 84.1562 368.546  c
83.8125 368.890 83.5286 369.273 83.3046 369.695  c
83.0807 370.117 82.8906 370.614 82.7343 371.187  c
83.3489 370.770 83.9635 370.562 84.5781 370.562  c
85.1614 370.562 85.6692 370.799 86.1015 371.273  c
86.5338 371.747 86.7500 372.359 86.7500 373.109  c
86.7500 373.828 86.5312 374.484 86.0937 375.078  c
85.5729 375.796 84.8802 376.156 84.0156 376.156  c
83.4218 376.156 82.9218 375.958 82.5156 375.562  c
81.7135 374.812 81.3125 373.833 81.3125 372.625  c
81.3125 371.854 81.4661 371.122 81.7734 370.429  c
82.0807 369.737 82.5208 369.119 83.0937 368.578  c
83.6666 368.036 84.2161 367.674 84.7421 367.492  c
85.2682 367.309 85.7552 367.218 86.2031 367.218  c
86.5781 367.218 l
h
82.6250 371.656 m
82.5520 372.229 82.5156 372.692 82.5156 373.046  c
82.5156 373.453 82.5911 373.893 82.7421 374.367  c
82.8932 374.841 83.1145 375.218 83.4062 375.500  c
83.6250 375.697 83.8906 375.796 84.2031 375.796  c
84.5677 375.796 84.8958 375.622 85.1875 375.273  c
85.4791 374.924 85.6250 374.432 85.6250 373.796  c
85.6250 373.067 85.4791 372.440 85.1875 371.914  c
84.8958 371.388 84.4895 371.125 83.9687 371.125  c
83.8020 371.125 83.6276 371.158 83.4453 371.226  c
83.2630 371.294 82.9895 371.437 82.6250 371.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
128.076 355.000 m
128.076 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
121 365 6 13 rc
newpath
131.796 372.437 m
123.203 372.437 l
123.203 371.765 l
131.796 371.765 l
131.796 372.437 l
h
f
Q
newpath
129.468 371.750 m
129.468 370.770 129.617 369.924 129.914 369.210  c
130.210 368.497 130.604 367.968 131.093 367.625  c
131.479 367.354 131.875 367.218 132.281 367.218  c
132.937 367.218 133.526 367.552 134.046 368.218  c
134.703 369.052 135.031 370.182 135.031 371.609  c
135.031 372.609 134.888 373.458 134.601 374.156  c
134.315 374.854 133.947 375.362 133.500 375.679  c
133.052 375.997 132.625 376.156 132.218 376.156  c
131.395 376.156 130.708 375.671 130.156 374.703  c
129.697 373.880 129.468 372.895 129.468 371.750  c
h
130.718 371.906 m
130.718 373.093 130.864 374.062 131.156 374.812  c
131.395 375.437 131.755 375.750 132.234 375.750  c
132.463 375.750 132.700 375.648 132.945 375.445  c
133.190 375.242 133.375 374.895 133.500 374.406  c
133.697 373.687 133.796 372.661 133.796 371.328  c
133.796 370.349 133.692 369.531 133.484 368.875  c
133.338 368.385 133.140 368.041 132.890 367.843  c
132.724 367.708 132.515 367.640 132.265 367.640  c
131.984 367.640 131.729 367.765 131.500 368.015  c
131.197 368.369 130.992 368.924 130.882 369.679  c
130.773 370.434 130.718 371.177 130.718 371.906  c
h
137.125 374.765 m
137.322 374.765 137.489 374.835 137.625 374.976  c
137.760 375.117 137.828 375.281 137.828 375.468  c
137.828 375.666 137.760 375.833 137.625 375.968  c
137.489 376.104 137.322 376.171 137.125 376.171  c
136.927 376.171 136.760 376.104 136.625 375.968  c
136.489 375.833 136.421 375.666 136.421 375.468  c
136.421 375.270 136.489 375.104 136.625 374.968  c
136.760 374.833 136.927 374.765 137.125 374.765  c
h
144.796 372.828 m
144.796 373.734 l
143.640 373.734 l
143.640 376.000 l
142.593 376.000 l
142.593 373.734 l
138.953 373.734 l
138.953 372.921 l
142.953 367.218 l
143.640 367.218 l
143.640 372.828 l
144.796 372.828 l
h
142.593 372.828 m
142.593 368.546 l
139.578 372.828 l
142.593 372.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
185.614 355.000 m
185.614 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
178 365 6 13 rc
newpath
188.796 372.437 m
180.203 372.437 l
180.203 371.765 l
188.796 371.765 l
188.796 372.437 l
h
f
Q
newpath
186.468 371.750 m
186.468 370.770 186.617 369.924 186.914 369.210  c
187.210 368.497 187.604 367.968 188.093 367.625  c
188.479 367.354 188.875 367.218 189.281 367.218  c
189.937 367.218 190.526 367.552 191.046 368.218  c
191.703 369.052 192.031 370.182 192.031 371.609  c
192.031 372.609 191.888 373.458 191.601 374.156  c
191.315 374.854 190.947 375.362 190.500 375.679  c
190.052 375.997 189.625 376.156 189.218 376.156  c
188.395 376.156 187.708 375.671 187.156 374.703  c
186.697 373.880 186.468 372.895 186.468 371.750  c
h
187.718 371.906 m
187.718 373.093 187.864 374.062 188.156 374.812  c
188.395 375.437 188.755 375.750 189.234 375.750  c
189.463 375.750 189.700 375.648 189.945 375.445  c
190.190 375.242 190.375 374.895 190.500 374.406  c
190.697 373.687 190.796 372.661 190.796 371.328  c
190.796 370.349 190.692 369.531 190.484 368.875  c
190.338 368.385 190.140 368.041 189.890 367.843  c
189.724 367.708 189.515 367.640 189.265 367.640  c
188.984 367.640 188.729 367.765 188.500 368.015  c
188.197 368.369 187.992 368.924 187.882 369.679  c
187.773 370.434 187.718 371.177 187.718 371.906  c
h
194.125 374.765 m
194.322 374.765 194.489 374.835 194.625 374.976  c
194.760 375.117 194.828 375.281 194.828 375.468  c
194.828 375.666 194.760 375.833 194.625 375.968  c
194.489 376.104 194.322 376.171 194.125 376.171  c
193.927 376.171 193.760 376.104 193.625 375.968  c
193.489 375.833 193.421 375.666 193.421 375.468  c
193.421 375.270 193.489 375.104 193.625 374.968  c
193.760 374.833 193.927 374.765 194.125 374.765  c
h
201.703 374.343 m
201.109 376.000 l
196.031 376.000 l
196.031 375.765 l
197.520 374.401 198.570 373.286 199.179 372.421  c
199.789 371.557 200.093 370.770 200.093 370.062  c
200.093 369.510 199.927 369.059 199.593 368.710  c
199.260 368.362 198.859 368.187 198.390 368.187  c
197.974 368.187 197.596 368.309 197.257 368.554  c
196.919 368.799 196.671 369.161 196.515 369.640  c
196.281 369.640 l
196.385 368.859 196.656 368.260 197.093 367.843  c
197.531 367.427 198.078 367.218 198.734 367.218  c
199.432 367.218 200.015 367.442 200.484 367.890  c
200.953 368.338 201.187 368.864 201.187 369.468  c
201.187 369.906 201.083 370.343 200.875 370.781  c
200.562 371.468 200.057 372.192 199.359 372.953  c
198.307 374.109 197.645 374.807 197.375 375.046  c
199.625 375.046 l
200.083 375.046 200.403 375.028 200.585 374.992  c
200.768 374.955 200.934 374.885 201.085 374.781  c
201.237 374.677 201.364 374.531 201.468 374.343  c
201.703 374.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 355.000 m
243.152 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
245.468 371.750 m
245.468 370.770 245.617 369.924 245.914 369.210  c
246.210 368.497 246.604 367.968 247.093 367.625  c
247.479 367.354 247.875 367.218 248.281 367.218  c
248.937 367.218 249.526 367.552 250.046 368.218  c
250.703 369.052 251.031 370.182 251.031 371.609  c
251.031 372.609 250.888 373.458 250.601 374.156  c
250.315 374.854 249.947 375.362 249.500 375.679  c
249.052 375.997 248.625 376.156 248.218 376.156  c
247.395 376.156 246.708 375.671 246.156 374.703  c
245.697 373.880 245.468 372.895 245.468 371.750  c
h
246.718 371.906 m
246.718 373.093 246.864 374.062 247.156 374.812  c
247.395 375.437 247.755 375.750 248.234 375.750  c
248.463 375.750 248.700 375.648 248.945 375.445  c
249.190 375.242 249.375 374.895 249.500 374.406  c
249.697 373.687 249.796 372.661 249.796 371.328  c
249.796 370.349 249.692 369.531 249.484 368.875  c
249.338 368.385 249.140 368.041 248.890 367.843  c
248.724 367.708 248.515 367.640 248.265 367.640  c
247.984 367.640 247.729 367.765 247.500 368.015  c
247.197 368.369 246.992 368.924 246.882 369.679  c
246.773 370.434 246.718 371.177 246.718 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
300.690 355.000 m
300.690 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
297.468 371.750 m
297.468 370.770 297.617 369.924 297.914 369.210  c
298.210 368.497 298.604 367.968 299.093 367.625  c
299.479 367.354 299.875 367.218 300.281 367.218  c
300.937 367.218 301.526 367.552 302.046 368.218  c
302.703 369.052 303.031 370.182 303.031 371.609  c
303.031 372.609 302.888 373.458 302.601 374.156  c
302.315 374.854 301.947 375.362 301.500 375.679  c
301.052 375.997 300.625 376.156 300.218 376.156  c
299.395 376.156 298.708 375.671 298.156 374.703  c
297.697 373.880 297.468 372.895 297.468 371.750  c
h
298.718 371.906 m
298.718 373.093 298.864 374.062 299.156 374.812  c
299.395 375.437 299.755 375.750 300.234 375.750  c
300.463 375.750 300.700 375.648 300.945 375.445  c
301.190 375.242 301.375 374.895 301.500 374.406  c
301.697 373.687 301.796 372.661 301.796 371.328  c
301.796 370.349 301.692 369.531 301.484 368.875  c
301.338 368.385 301.140 368.041 300.890 367.843  c
300.724 367.708 300.515 367.640 300.265 367.640  c
299.984 367.640 299.729 367.765 299.500 368.015  c
299.197 368.369 298.992 368.924 298.882 369.679  c
298.773 370.434 298.718 371.177 298.718 371.906  c
h
305.125 374.765 m
305.322 374.765 305.489 374.835 305.625 374.976  c
305.760 375.117 305.828 375.281 305.828 375.468  c
305.828 375.666 305.760 375.833 305.625 375.968  c
305.489 376.104 305.322 376.171 305.125 376.171  c
304.927 376.171 304.760 376.104 304.625 375.968  c
304.489 375.833 304.421 375.666 304.421 375.468  c
304.421 375.270 304.489 375.104 304.625 374.968  c
304.760 374.833 304.927 374.765 305.125 374.765  c
h
312.703 374.343 m
312.109 376.000 l
307.031 376.000 l
307.031 375.765 l
308.520 374.401 309.570 373.286 310.179 372.421  c
310.789 371.557 311.093 370.770 311.093 370.062  c
311.093 369.510 310.927 369.059 310.593 368.710  c
310.260 368.362 309.859 368.187 309.390 368.187  c
308.974 368.187 308.596 368.309 308.257 368.554  c
307.919 368.799 307.671 369.161 307.515 369.640  c
307.281 369.640 l
307.385 368.859 307.656 368.260 308.093 367.843  c
308.531 367.427 309.078 367.218 309.734 367.218  c
310.432 367.218 311.015 367.442 311.484 367.890  c
311.953 368.338 312.187 368.864 312.187 369.468  c
312.187 369.906 312.083 370.343 311.875 370.781  c
311.562 371.468 311.057 372.192 310.359 372.953  c
309.307 374.109 308.645 374.807 308.375 375.046  c
310.625 375.046 l
311.083 375.046 311.403 375.028 311.585 374.992  c
311.768 374.955 311.934 374.885 312.085 374.781  c
312.237 374.677 312.364 374.531 312.468 374.343  c
312.703 374.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
358.228 355.000 m
358.228 359.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
355.468 371.750 m
355.468 370.770 355.617 369.924 355.914 369.210  c
356.210 368.497 356.604 367.968 357.093 367.625  c
357.479 367.354 357.875 367.218 358.281 367.218  c
358.937 367.218 359.526 367.552 360.046 368.218  c
360.703 369.052 361.031 370.182 361.031 371.609  c
361.031 372.609 360.888 373.458 360.601 374.156  c
360.315 374.854 359.947 375.362 359.500 375.679  c
359.052 375.997 358.625 376.156 358.218 376.156  c
357.395 376.156 356.708 375.671 356.156 374.703  c
355.697 373.880 355.468 372.895 355.468 371.750  c
h
356.718 371.906 m
356.718 373.093 356.864 374.062 357.156 374.812  c
357.395 375.437 357.755 375.750 358.234 375.750  c
358.463 375.750 358.700 375.648 358.945 375.445  c
359.190 375.242 359.375 374.895 359.500 374.406  c
359.697 373.687 359.796 372.661 359.796 371.328  c
359.796 370.349 359.692 369.531 359.484 368.875  c
359.338 368.385 359.140 368.041 358.890 367.843  c
358.724 367.708 358.515 367.640 358.265 367.640  c
357.984 367.640 357.729 367.765 357.500 368.015  c
357.197 368.369 356.992 368.924 356.882 369.679  c
356.773 370.434 356.718 371.177 356.718 371.906  c
h
363.125 374.765 m
363.322 374.765 363.489 374.835 363.625 374.976  c
363.760 375.117 363.828 375.281 363.828 375.468  c
363.828 375.666 363.760 375.833 363.625 375.968  c
363.489 376.104 363.322 376.171 363.125 376.171  c
362.927 376.171 362.760 376.104 362.625 375.968  c
362.489 375.833 362.421 375.666 362.421 375.468  c
362.421 375.270 362.489 375.104 362.625 374.968  c
362.760 374.833 362.927 374.765 363.125 374.765  c
h
370.796 372.828 m
370.796 373.734 l
369.640 373.734 l
369.640 376.000 l
368.593 376.000 l
368.593 373.734 l
364.953 373.734 l
364.953 372.921 l
368.953 367.218 l
369.640 367.218 l
369.640 372.828 l
370.796 372.828 l
h
368.593 372.828 m
368.593 368.546 l
365.578 372.828 l
368.593 372.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
41.7690 355.000 m
41.7690 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
99.3070 355.000 m
99.3070 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
156.845 355.000 m
156.845 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
214.383 355.000 m
214.383 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
271.921 355.000 m
271.921 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
329.459 355.000 m
329.459 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
386.997 355.000 m
386.997 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
243.152 355.000 m
243.152 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
208 170 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
243.152 353.000 m
239.152 353.000 l
S
Q
q
0 w
newpath
243.152 298.846 m
239.152 298.846 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
225.468 303.750 m
225.468 302.770 225.617 301.924 225.914 301.210  c
226.210 300.497 226.604 299.968 227.093 299.625  c
227.479 299.354 227.875 299.218 228.281 299.218  c
228.937 299.218 229.526 299.552 230.046 300.218  c
230.703 301.052 231.031 302.182 231.031 303.609  c
231.031 304.609 230.888 305.458 230.601 306.156  c
230.315 306.854 229.947 307.362 229.500 307.679  c
229.052 307.997 228.625 308.156 228.218 308.156  c
227.395 308.156 226.708 307.671 226.156 306.703  c
225.697 305.880 225.468 304.895 225.468 303.750  c
h
226.718 303.906 m
226.718 305.093 226.864 306.062 227.156 306.812  c
227.395 307.437 227.755 307.750 228.234 307.750  c
228.463 307.750 228.700 307.648 228.945 307.445  c
229.190 307.242 229.375 306.895 229.500 306.406  c
229.697 305.687 229.796 304.661 229.796 303.328  c
229.796 302.349 229.692 301.531 229.484 300.875  c
229.338 300.385 229.140 300.041 228.890 299.843  c
228.724 299.708 228.515 299.640 228.265 299.640  c
227.984 299.640 227.729 299.765 227.500 300.015  c
227.197 300.369 226.992 300.924 226.882 301.679  c
226.773 302.434 226.718 303.177 226.718 303.906  c
h
233.125 306.765 m
233.322 306.765 233.489 306.835 233.625 306.976  c
233.760 307.117 233.828 307.281 233.828 307.468  c
233.828 307.666 233.760 307.833 233.625 307.968  c
233.489 308.104 233.322 308.171 233.125 308.171  c
232.927 308.171 232.760 308.104 232.625 307.968  c
232.489 307.833 232.421 307.666 232.421 307.468  c
232.421 307.270 232.489 307.104 232.625 306.968  c
232.760 306.833 232.927 306.765 233.125 306.765  c
h
240.796 304.828 m
240.796 305.734 l
239.640 305.734 l
239.640 308.000 l
238.593 308.000 l
238.593 305.734 l
234.953 305.734 l
234.953 304.921 l
238.953 299.218 l
239.640 299.218 l
239.640 304.828 l
240.796 304.828 l
h
238.593 304.828 m
238.593 300.546 l
235.578 304.828 l
238.593 304.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 244.692 m
239.152 244.692 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
225.468 249.750 m
225.468 248.770 225.617 247.924 225.914 247.210  c
226.210 246.497 226.604 245.968 227.093 245.625  c
227.479 245.354 227.875 245.218 228.281 245.218  c
228.937 245.218 229.526 245.552 230.046 246.218  c
230.703 247.052 231.031 248.182 231.031 249.609  c
231.031 250.609 230.888 251.458 230.601 252.156  c
230.315 252.854 229.947 253.362 229.500 253.679  c
229.052 253.997 228.625 254.156 228.218 254.156  c
227.395 254.156 226.708 253.671 226.156 252.703  c
225.697 251.880 225.468 250.895 225.468 249.750  c
h
226.718 249.906 m
226.718 251.093 226.864 252.062 227.156 252.812  c
227.395 253.437 227.755 253.750 228.234 253.750  c
228.463 253.750 228.700 253.648 228.945 253.445  c
229.190 253.242 229.375 252.895 229.500 252.406  c
229.697 251.687 229.796 250.661 229.796 249.328  c
229.796 248.349 229.692 247.531 229.484 246.875  c
229.338 246.385 229.140 246.041 228.890 245.843  c
228.724 245.708 228.515 245.640 228.265 245.640  c
227.984 245.640 227.729 245.765 227.500 246.015  c
227.197 246.369 226.992 246.924 226.882 247.679  c
226.773 248.434 226.718 249.177 226.718 249.906  c
h
233.125 252.765 m
233.322 252.765 233.489 252.835 233.625 252.976  c
233.760 253.117 233.828 253.281 233.828 253.468  c
233.828 253.666 233.760 253.833 233.625 253.968  c
233.489 254.104 233.322 254.171 233.125 254.171  c
232.927 254.171 232.760 254.104 232.625 253.968  c
232.489 253.833 232.421 253.666 232.421 253.468  c
232.421 253.270 232.489 253.104 232.625 252.968  c
232.760 252.833 232.927 252.765 233.125 252.765  c
h
240.578 245.218 m
240.578 245.453 l
240.015 245.505 239.557 245.614 239.203 245.781  c
238.849 245.947 238.500 246.203 238.156 246.546  c
237.812 246.890 237.528 247.273 237.304 247.695  c
237.080 248.117 236.890 248.614 236.734 249.187  c
237.349 248.770 237.963 248.562 238.578 248.562  c
239.161 248.562 239.669 248.799 240.101 249.273  c
240.533 249.747 240.750 250.359 240.750 251.109  c
240.750 251.828 240.531 252.484 240.093 253.078  c
239.572 253.796 238.880 254.156 238.015 254.156  c
237.421 254.156 236.921 253.958 236.515 253.562  c
235.713 252.812 235.312 251.833 235.312 250.625  c
235.312 249.854 235.466 249.122 235.773 248.429  c
236.080 247.737 236.520 247.119 237.093 246.578  c
237.666 246.036 238.216 245.674 238.742 245.492  c
239.268 245.309 239.755 245.218 240.203 245.218  c
240.578 245.218 l
h
236.625 249.656 m
236.552 250.229 236.515 250.692 236.515 251.046  c
236.515 251.453 236.591 251.893 236.742 252.367  c
236.893 252.841 237.114 253.218 237.406 253.500  c
237.625 253.697 237.890 253.796 238.203 253.796  c
238.567 253.796 238.895 253.622 239.187 253.273  c
239.479 252.924 239.625 252.432 239.625 251.796  c
239.625 251.067 239.479 250.440 239.187 249.914  c
238.895 249.388 238.489 249.125 237.968 249.125  c
237.802 249.125 237.627 249.158 237.445 249.226  c
237.263 249.294 236.989 249.437 236.625 249.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 190.538 m
239.152 190.538 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
225.468 195.750 m
225.468 194.770 225.617 193.924 225.914 193.210  c
226.210 192.497 226.604 191.968 227.093 191.625  c
227.479 191.354 227.875 191.218 228.281 191.218  c
228.937 191.218 229.526 191.552 230.046 192.218  c
230.703 193.052 231.031 194.182 231.031 195.609  c
231.031 196.609 230.888 197.458 230.601 198.156  c
230.315 198.854 229.947 199.362 229.500 199.679  c
229.052 199.997 228.625 200.156 228.218 200.156  c
227.395 200.156 226.708 199.671 226.156 198.703  c
225.697 197.880 225.468 196.895 225.468 195.750  c
h
226.718 195.906 m
226.718 197.093 226.864 198.062 227.156 198.812  c
227.395 199.437 227.755 199.750 228.234 199.750  c
228.463 199.750 228.700 199.648 228.945 199.445  c
229.190 199.242 229.375 198.895 229.500 198.406  c
229.697 197.687 229.796 196.661 229.796 195.328  c
229.796 194.349 229.692 193.531 229.484 192.875  c
229.338 192.385 229.140 192.041 228.890 191.843  c
228.724 191.708 228.515 191.640 228.265 191.640  c
227.984 191.640 227.729 191.765 227.500 192.015  c
227.197 192.369 226.992 192.924 226.882 193.679  c
226.773 194.434 226.718 195.177 226.718 195.906  c
h
233.125 198.765 m
233.322 198.765 233.489 198.835 233.625 198.976  c
233.760 199.117 233.828 199.281 233.828 199.468  c
233.828 199.666 233.760 199.833 233.625 199.968  c
233.489 200.104 233.322 200.171 233.125 200.171  c
232.927 200.171 232.760 200.104 232.625 199.968  c
232.489 199.833 232.421 199.666 232.421 199.468  c
232.421 199.270 232.489 199.104 232.625 198.968  c
232.760 198.833 232.927 198.765 233.125 198.765  c
h
237.250 195.671 m
236.562 195.109 236.119 194.658 235.921 194.320  c
235.724 193.981 235.625 193.630 235.625 193.265  c
235.625 192.703 235.841 192.221 236.273 191.820  c
236.705 191.419 237.281 191.218 238.000 191.218  c
238.697 191.218 239.257 191.406 239.679 191.781  c
240.101 192.156 240.312 192.583 240.312 193.062  c
240.312 193.385 240.197 193.713 239.968 194.046  c
239.739 194.380 239.265 194.776 238.546 195.234  c
239.286 195.807 239.776 196.260 240.015 196.593  c
240.338 197.020 240.500 197.474 240.500 197.953  c
240.500 198.557 240.270 199.075 239.812 199.507  c
239.354 199.940 238.750 200.156 238.000 200.156  c
237.177 200.156 236.536 199.901 236.078 199.390  c
235.713 198.974 235.531 198.520 235.531 198.031  c
235.531 197.656 235.661 197.281 235.921 196.906  c
236.182 196.531 236.625 196.119 237.250 195.671  c
h
238.234 194.984 m
238.744 194.526 239.067 194.164 239.203 193.898  c
239.338 193.632 239.406 193.333 239.406 193.000  c
239.406 192.562 239.281 192.216 239.031 191.960  c
238.781 191.705 238.442 191.578 238.015 191.578  c
237.578 191.578 237.224 191.703 236.953 191.953  c
236.682 192.203 236.546 192.494 236.546 192.828  c
236.546 193.046 236.604 193.268 236.718 193.492  c
236.833 193.716 236.994 193.927 237.203 194.125  c
238.234 194.984 l
h
237.546 195.906 m
237.192 196.197 236.932 196.518 236.765 196.867  c
236.599 197.216 236.515 197.593 236.515 198.000  c
236.515 198.552 236.664 198.992 236.960 199.320  c
237.257 199.648 237.635 199.812 238.093 199.812  c
238.552 199.812 238.919 199.682 239.195 199.421  c
239.471 199.161 239.609 198.849 239.609 198.484  c
239.609 198.182 239.526 197.906 239.359 197.656  c
239.067 197.208 238.463 196.625 237.546 195.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 136.384 m
239.152 136.384 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
226.531 138.234 m
228.625 137.218 l
228.828 137.218 l
228.828 144.484 l
228.828 144.963 228.849 145.263 228.890 145.382  c
228.932 145.502 229.015 145.593 229.140 145.656  c
229.265 145.718 229.520 145.755 229.906 145.765  c
229.906 146.000 l
226.671 146.000 l
226.671 145.765 l
227.078 145.755 227.341 145.718 227.460 145.656  c
227.580 145.593 227.664 145.510 227.710 145.406  c
227.757 145.302 227.781 144.994 227.781 144.484  c
227.781 139.843 l
227.781 139.208 227.760 138.802 227.718 138.625  c
227.687 138.489 227.632 138.390 227.554 138.328  c
227.476 138.265 227.380 138.234 227.265 138.234  c
227.109 138.234 226.895 138.302 226.625 138.437  c
226.531 138.234 l
h
233.125 144.765 m
233.322 144.765 233.489 144.835 233.625 144.976  c
233.760 145.117 233.828 145.281 233.828 145.468  c
233.828 145.666 233.760 145.833 233.625 145.968  c
233.489 146.104 233.322 146.171 233.125 146.171  c
232.927 146.171 232.760 146.104 232.625 145.968  c
232.489 145.833 232.421 145.666 232.421 145.468  c
232.421 145.270 232.489 145.104 232.625 144.968  c
232.760 144.833 232.927 144.765 233.125 144.765  c
h
235.218 141.750 m
235.218 140.770 235.367 139.924 235.664 139.210  c
235.960 138.497 236.354 137.968 236.843 137.625  c
237.229 137.354 237.625 137.218 238.031 137.218  c
238.687 137.218 239.276 137.552 239.796 138.218  c
240.453 139.052 240.781 140.182 240.781 141.609  c
240.781 142.609 240.638 143.458 240.351 144.156  c
240.065 144.854 239.697 145.362 239.250 145.679  c
238.802 145.997 238.375 146.156 237.968 146.156  c
237.145 146.156 236.458 145.671 235.906 144.703  c
235.447 143.880 235.218 142.895 235.218 141.750  c
h
236.468 141.906 m
236.468 143.093 236.614 144.062 236.906 144.812  c
237.145 145.437 237.505 145.750 237.984 145.750  c
238.213 145.750 238.450 145.648 238.695 145.445  c
238.940 145.242 239.125 144.895 239.250 144.406  c
239.447 143.687 239.546 142.661 239.546 141.328  c
239.546 140.349 239.442 139.531 239.234 138.875  c
239.088 138.385 238.890 138.041 238.640 137.843  c
238.474 137.708 238.265 137.640 238.015 137.640  c
237.734 137.640 237.479 137.765 237.250 138.015  c
236.947 138.369 236.742 138.924 236.632 139.679  c
236.523 140.434 236.468 141.177 236.468 141.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 82.2307 m
239.152 82.2307 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
226.531 84.2343 m
228.625 83.2187 l
228.828 83.2187 l
228.828 90.4843 l
228.828 90.9635 228.849 91.2630 228.890 91.3828  c
228.932 91.5026 229.015 91.5937 229.140 91.6562  c
229.265 91.7187 229.520 91.7552 229.906 91.7656  c
229.906 92.0000 l
226.671 92.0000 l
226.671 91.7656 l
227.078 91.7552 227.341 91.7187 227.460 91.6562  c
227.580 91.5937 227.664 91.5104 227.710 91.4062  c
227.757 91.3020 227.781 90.9947 227.781 90.4843  c
227.781 85.8437 l
227.781 85.2083 227.760 84.8020 227.718 84.6250  c
227.687 84.4895 227.632 84.3906 227.554 84.3281  c
227.476 84.2656 227.380 84.2343 227.265 84.2343  c
227.109 84.2343 226.895 84.3020 226.625 84.4375  c
226.531 84.2343 l
h
233.125 90.7656 m
233.322 90.7656 233.489 90.8359 233.625 90.9765  c
233.760 91.1171 233.828 91.2812 233.828 91.4687  c
233.828 91.6666 233.760 91.8333 233.625 91.9687  c
233.489 92.1041 233.322 92.1718 233.125 92.1718  c
232.927 92.1718 232.760 92.1041 232.625 91.9687  c
232.489 91.8333 232.421 91.6666 232.421 91.4687  c
232.421 91.2708 232.489 91.1041 232.625 90.9687  c
232.760 90.8333 232.927 90.7656 233.125 90.7656  c
h
240.703 90.3437 m
240.109 92.0000 l
235.031 92.0000 l
235.031 91.7656 l
236.520 90.4010 237.570 89.2864 238.179 88.4218  c
238.789 87.5572 239.093 86.7708 239.093 86.0625  c
239.093 85.5104 238.927 85.0599 238.593 84.7109  c
238.260 84.3619 237.859 84.1875 237.390 84.1875  c
236.974 84.1875 236.596 84.3099 236.257 84.5546  c
235.919 84.7994 235.671 85.1614 235.515 85.6406  c
235.281 85.6406 l
235.385 84.8593 235.656 84.2604 236.093 83.8437  c
236.531 83.4270 237.078 83.2187 237.734 83.2187  c
238.432 83.2187 239.015 83.4427 239.484 83.8906  c
239.953 84.3385 240.187 84.8645 240.187 85.4687  c
240.187 85.9062 240.083 86.3437 239.875 86.7812  c
239.562 87.4687 239.057 88.1927 238.359 88.9531  c
237.307 90.1093 236.645 90.8072 236.375 91.0468  c
238.625 91.0468 l
239.083 91.0468 239.403 91.0286 239.585 90.9921  c
239.768 90.9557 239.934 90.8854 240.085 90.7812  c
240.237 90.6770 240.364 90.5312 240.468 90.3437  c
240.703 90.3437 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 28.0769 m
239.152 28.0769 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
226.531 30.2343 m
228.625 29.2187 l
228.828 29.2187 l
228.828 36.4843 l
228.828 36.9635 228.849 37.2630 228.890 37.3828  c
228.932 37.5026 229.015 37.5937 229.140 37.6562  c
229.265 37.7187 229.520 37.7552 229.906 37.7656  c
229.906 38.0000 l
226.671 38.0000 l
226.671 37.7656 l
227.078 37.7552 227.341 37.7187 227.460 37.6562  c
227.580 37.5937 227.664 37.5104 227.710 37.4062  c
227.757 37.3020 227.781 36.9947 227.781 36.4843  c
227.781 31.8437 l
227.781 31.2083 227.760 30.8020 227.718 30.6250  c
227.687 30.4895 227.632 30.3906 227.554 30.3281  c
227.476 30.2656 227.380 30.2343 227.265 30.2343  c
227.109 30.2343 226.895 30.3020 226.625 30.4375  c
226.531 30.2343 l
h
233.125 36.7656 m
233.322 36.7656 233.489 36.8359 233.625 36.9765  c
233.760 37.1171 233.828 37.2812 233.828 37.4687  c
233.828 37.6666 233.760 37.8333 233.625 37.9687  c
233.489 38.1041 233.322 38.1718 233.125 38.1718  c
232.927 38.1718 232.760 38.1041 232.625 37.9687  c
232.489 37.8333 232.421 37.6666 232.421 37.4687  c
232.421 37.2708 232.489 37.1041 232.625 36.9687  c
232.760 36.8333 232.927 36.7656 233.125 36.7656  c
h
240.796 34.8281 m
240.796 35.7343 l
239.640 35.7343 l
239.640 38.0000 l
238.593 38.0000 l
238.593 35.7343 l
234.953 35.7343 l
234.953 34.9218 l
238.953 29.2187 l
239.640 29.2187 l
239.640 34.8281 l
240.796 34.8281 l
h
238.593 34.8281 m
238.593 30.5468 l
235.578 34.8281 l
238.593 34.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 325.923 m
241.152 325.923 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 271.769 m
241.152 271.769 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 217.615 m
241.152 217.615 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 163.461 m
241.152 163.461 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 109.307 m
241.152 109.307 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
243.152 55.1538 m
241.152 55.1538 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
